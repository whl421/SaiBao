<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:*redis.properties</value>
            </list>
        </property>
    </bean>
    <!--配置redis的参数-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" >
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        
<!--         <property name="maxIdle" value="2"/> -->
<!--         <property name="maxTotal" value="10"/> -->
<!--         <property name="maxWaitMillis" value="1000"/> -->
<!--         <property name="testOnBorrow" value="3000"/> -->
    </bean>
    <!--配置redis的连接参数 如需要密码,请配置,database是redis的指定哪个库-->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
      <!--   <property name="password" value="${redis.password}"/> -->
        <property name="database" value="${redis.dbIndex}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <!--redis操作模版,使用该对象可以操作redis  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <!--开启事务-->
        <property name="enableTransactionSupport" value="true"/>
    </bean>

	 <!-- 缓存序列化方式 -->
    <bean id="keySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    
    <bean id="valueSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
   
	
    <!-- 配置redis缓存管理器 -->
<!--     <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"> -->
<!--         <constructor-arg name="redisOperations" ref="redisTemplate"/> -->
<!--         <property name="defaultExpiration" value="${redis.expiration}"/> -->
<!--     </bean> -->
    
   
<!--     配置RedisCacheConfig -->
<!--     <bean id="redisCacheConfig" class="com.springredis.config.redis.RedisCacheConfig"> -->
<!--         <constructor-arg ref="jedisConnectionFactory"/> -->
<!--         <constructor-arg ref="redisTemplate"/> -->
<!--         <constructor-arg ref="redisCacheManager"/> -->
<!--     </bean> -->
<!--     <bean id="keyGenerator" class="com.springredis.config.redis.KeyGenerator"/> -->



<!--     <cache:annotation-driven cache-manager="redisCacheManager" key-generator="keyGenerator"/> -->

</beans>